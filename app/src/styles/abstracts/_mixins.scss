@use "./variables" as *;
@use "../base/animations" as *;
@mixin active-effect {
  &:active {
    &::after {
      transform: scale(1.4, 1.6);
      opacity: 0;
      background-color: #ffffff77;
    }
  }
  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    position: absolute;
    bottom: 0;
    left: 0;
    top: 0;
    z-index: -99;
    background-color: #ffffff00;
    border-radius: 1rem;
    transition: all 0.5s;
  }
}
@mixin bdb0 {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}
@mixin bdl0 {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}
@mixin bdr0 {
  border-bottom-right-radius: 0 !important;
  border-top-right-radius: 0 !important;
}
@mixin bdt0 {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
}
@mixin bgFit {
  background-repeat: no-repeat;
  background-position: 100%;
  background-origin: content-box;
  background-attachment: local;
}
@mixin btn-secondary-styles {
  &.btn {
    &.btn-secondary {
      &:not(:has(svg)):not(.datBtn) {
        height: 2.45rem;
      }
    }
  }
}
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin btnColored($bcolor1, $bcolor2, $tcolor) {
  background: radial-gradient(circle at bottom left, $bcolor1, $bcolor2);
  border: transparent;
  color: $tcolor;
  &:not(.datBtn) {
    height: 2.3rem;
  }
}
@mixin carded {
  width: 100%;
  min-width: 14.3rem;
}
@mixin tf0_5 {
  transition: transform 0.5s ease-in-out;
}
@mixin tf1 {
  transition: transform 1s ease-in-out;
}
@mixin tf($duration, $timing) {
  transition: transform $duration $timing;
}
@mixin scb-webkit {
  scroll-behavior: smooth;
}
@mixin flAlItCt {
  display: flex;
  align-items: center;
}
@mixin SbC {
  justify-content: space-between;
  align-items: center;
}
@mixin flexCenter {
  @include flAlItCt;
  justify-content: center;
}
@mixin fCNoW {
  display: flex;
  flex-flow: column nowrap;
}
@mixin fCW {
  display: flex;
  flex-flow: column wrap;
}
@mixin flex-center-column {
  @include fCNoW;
  align-items: center;
}
@mixin fCt {
  @include flexCenter;
  align-content: center;
  justify-items: center;
}
@mixin fNoW {
  display: flex;
  flex-wrap: nowrap;
}
@mixin fRNoW {
  display: flex;
  flex-flow: row nowrap;
}
@mixin fRW {
  display: flex;
  flex-flow: row wrap;
}
@mixin fStart {
  display: flex;
  align-items: flex-start;
  align-content: flex-start;
  vertical-align: middle;
}
@mixin form-border {
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
  box-shadow: 0.2vh 0.2vh 0.2vh grey;
}
@mixin form-clip {
  background-clip: padding-box;
  margin: 0;
  padding: 0.7rem;
  line-height: 1.5;
}
@mixin gridJC {
  display: grid;
  justify-items: center;
}
@mixin maxCGapped($num, $unit) {
  width: max-content;
  column-gap: #{$num}#{$unit};
}
@mixin maxSize($num1, $unit1, $num2, $unit2) {
  max-width: #{$num1}#{$unit1};
  max-height: #{$num2}#{$unit2};
}
@mixin maxSizeB($num1, $num2) {
  max-width: $num1;
  max-height: $num2;
}
@mixin minSizeB($num1, $num2) {
  min-width: $num1;
  min-height: $num2;
}
@mixin minMaxW($num1, $unit1, $num2, $unit2) {
  min-width: #{$num1}#{$unit1};
  max-width: #{$num2}#{$unit2};
}
@mixin minMaxWB($num1, $unit1, $num2, $unit2, $num3, $unit3) {
  width: #{$num1}#{$unit1};
  @include minMaxW($num2, $unit2, $num3, $unit3);
}
@mixin minWD($num1, $num2) {
  width: $num1;
  min-width: $num2;
}
@mixin maxWD($num1, $num2) {
  width: $num1;
  max-width: $num2;
}
@mixin minMaxWD($num1, $num2) {
  min-width: $num1;
  max-width: $num2;
}
@mixin minMaxWDB($num1, $num2, $num3) {
  width: $num1;
  @include minMaxWD($num2, $num3);
}
@mixin limStkW($num) {
  min-width: $num;
  max-width: $num;
}
@mixin stkWB($num1, $num2) {
  width: $num1;
  @include limStkW($num2);
}
@mixin stkW($num) {
  width: $num;
  @include limStkW($num);
}
@mixin modal($size, $left, $z) {
  @include fCNoW;
  @include modalDlgBSLike;
  @include size($size, "vw", "max-content", "");
  left: #{$left}#{"%"};
  background-color: #fff;
  padding: 2rem;
  border-radius: 0.5rem;
  box-shadow: 0 0 0.6rem #0000004d;
  z-index: $z;
  &::backdrop {
    background-color: #00000080;
  }
}
@mixin modalDlgBSLike() {
  position: relative;
  animation: dropIn 0.3s ease-out forwards, fadeIn 0.6s ease-in-out forwards;
}
@mixin noSpace {
  padding: 0;
  margin: 0;
}
@mixin size($num1, $unit1, $num2, $unit2) {
  width: #{$num1}#{$unit1};
  height: #{$num2}#{$unit2};
}
@mixin sz($num1, $num2) {
  width: $num1;
  height: $num2;
}
@mixin szEq($num1) {
  width: $num1;
  height: $num1;
}
@mixin szFull {
  width: 100%;
  height: 100%;
}
@mixin symGap($num) {
  column-gap: #{$num}vw;
  row-gap: #{$num}vh;
}
@mixin widCGap($num1, $unit1, $num2, $unit2) {
  width: #{$num1}#{$unit1};
  column-gap: #{$num2}#{$unit2};
}
@mixin wCGapB($num1, $num2) {
  width: $num1;
  column-gap: $num2;
}
@mixin validityWarn($color) {
  display: block;
  height: 0.8rem;
  color: $color;
}
@mixin formCheckOpaque {
  opacity: 0.3;
  margin-right: 0.4rem;
  &:checked {
    opacity: 1;
    accent-color: mintcream;
    &.form-check-input {
      background-color: mintcream;
      border-color: mintcream;
    }
  }
}
@mixin fixGenWid {
  width: $inpGenWidFix;
  max-width: $inpGenWidFix;
}
@mixin goldenLock {
  @include bdl0;
  height: 100%;
  justify-content: center;
  background-color: transparent;
  padding-right: 2%;
  padding-left: 2%;
  border-radius: var(--bs-border-radius);
  margin: 0;
  padding-left: 1vw;
  padding: 0.375rem 0.75rem;
  line-height: 1.5;
  color: var(--bs-body-color);
  background-color: var(--bs-body-bg);
  box-shadow: 0.2vh 0.2vh 0.2vh grey;
  background-clip: padding-box;
  border: var(--bs-border-width) solid var(--bs-border-color);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  &.sumMsr,
  &.indMsr {
    border-radius: 0;
  }
  svg {
    line {
      stroke: grey;
    }
    path {
      &.svg-lock-hook,
      &.svg-unlock-hook {
        fill: grey;
      }
      &.svg-lock-body,
      &.svg-unlock-body {
        stroke: grey;
        fill: url(#gradiente-lock);
      }
    }
  }
}
